AWSTemplateFormatVersion: "2010-09-09"
Transform: 'AWS::Serverless-2016-10-31'
Description: Stack for broxy homepage website

Resources:
  Lambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: <%= lambdaName %>
      Handler: src/index.handler
      Runtime: nodejs10.x
      CodeUri: ../../../build
      AutoPublishAlias: live
      DeploymentPreference:
        Type: AllAtOnce
      Description: <%= projectName %> Lambda
      Role: !GetAtt LambdaExecutionRole.Arn
      MemorySize: 256
      Timeout: 600
      Environment:
        Variables:
          NODE_ENV: production
      Tags:
        Project: interactive-tv-data
        BBCComponent: <%= githubRepo %>
        BBCProject: interactive-tv-data
        BBCEnvironment: live
        BBCOwner: orion

  LambdaLogGroup:
    Type: "AWS::Logs::LogGroup"
    Properties:
      LogGroupName: "/aws/lambda/<%= lambdaLogGroup %>"
      RetentionInDays: <%= logRetention %>

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
      Policies:
        -
          PolicyName: CloudwatchLogs
          PolicyDocument:
            Statement:
              -
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:GetLogEvents
                  - logs:PutLogEvents
                Resource:
                  - !GetAtt LambdaLogGroup.Arn
                Effect: Allow
    
  <%= apiGateway %>

  <%= alarms %>